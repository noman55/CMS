
import com.mysql.jdbc.Statement;
import static com.sun.xml.internal.fastinfoset.alphabet.BuiltInRestrictedAlphabets.table;
import java.awt.Color;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.Optional;
import javafx.scene.control.Alert;
import javafx.scene.control.ButtonType;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableModel;
import net.proteanit.sql.DbUtils;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author dell
 */
public class homePageS extends javax.swing.JFrame {
String category,sname,stdid;
    int flag=0;
    /**
     * Creates new form homePageS
     */
    public homePageS(String s1,String s2,String s3) {
        initComponents();
        b1.setEnabled(false);
       // jLabel5.setForeground(Color.cyan);

                this.setExtendedState(this.getExtendedState() | JFrame.MAXIMIZED_BOTH);

        category=s1;sname=s2;stdid=s3;
        l1.setText(sname);
        l2.setText(stdid);
        DefaultTableModel model = (DefaultTableModel)
table.getModel(); int rows=model.getRowCount();
 DefaultTableModel model2 = (DefaultTableModel)
table2.getModel(); int row=model2.getRowCount();
 if (rows>0)
 {
 for (int i=0; i<rows; i++)
model.removeRow(0); // To remove all rows from

 }
  if (row>0)
 {
 for (int i=0; i<row; i++)
model2.removeRow(0); // To remove all rows from

 }
       
    }
    
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        ll = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        l2 = new javax.swing.JLabel();
        l1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        table2 = new javax.swing.JTable();
        b1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximizedBounds(new java.awt.Rectangle(0, 0, 790, 420));
        getContentPane().setLayout(null);

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Course ID", "section id", "Course Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(table);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(10, 180, 300, 123);

        jButton1.setText("Show Enrolled Courses");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(40, 320, 160, 23);

        jButton2.setText("Clear");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(220, 320, 100, 23);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Greetings");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(10, 0, 114, 55);

        ll.setText("ID");
        getContentPane().add(ll);
        ll.setBounds(10, 110, 40, 28);

        jLabel2.setText("Name");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(10, 60, 40, 33);
        getContentPane().add(l2);
        l2.setBounds(70, 110, 186, 28);
        getContentPane().add(l1);
        l1.setBounds(70, 60, 186, 33);

        table2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Course ID", "section id", "course name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(table2);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(360, 180, 290, 123);

        b1.setText("Show List");
        b1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b1ActionPerformed(evt);
            }
        });
        getContentPane().add(b1);
        b1.setBounds(450, 320, 90, 23);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Enrolled Courses");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(40, 150, 160, 27);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Add New Courses");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(360, 150, 180, 27);

        jButton4.setText("Clear");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4);
        jButton4.setBounds(560, 320, 80, 23);

        jButton5.setText("Refresh");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5);
        jButton5.setBounds(360, 320, 80, 23);

        jButton6.setText("LOGOUT");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton6);
        jButton6.setBounds(553, 20, 90, 23);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
flag++;
if(flag>0)
        b1.setEnabled(true);
DefaultTableModel model = (DefaultTableModel)
table.getModel();
 try
 {
Class.forName("java.sql.DriverManager");
 Connection con = (Connection)
 DriverManager.getConnection
("jdbc:mysql://localhost:3306/cms1",
"root", "A7@qcnsar");
 Statement stmt = (Statement) con.createStatement();
 String query="SELECT * FROM studentcourse where sid ="+stdid;
ResultSet rs = stmt.executeQuery(query);
 while(rs.next())
 {
     String cid=rs.getString("cid");
     String secid=rs.getString("secid");
     Statement substmt = (Statement) con.createStatement();
     String subquery="SELECT * FROM course where cid ='"+cid+"'";
       ResultSet subrs = substmt.executeQuery(subquery);
       subrs.next();
       String cname=subrs.getString("cname");
       model.addRow (new Object[] {cid,secid,cname});
     /*
int cid = rs.getInt("cid");
       Statement substmt = (Statement) con.createStatement();
        String subquery="SELECT * FROM course where cid =" + cid;
       ResultSet subrs = substmt.executeQuery(subquery);
       subrs.next();
       String cname=subrs.getString("cname");
        model.addRow (new Object[] {cid,cname});
    */ 
 }
 }
 catch (Exception e)
 {
 JOptionPane.showMessageDialog (this, e.getMessage());
 }

        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
flag--;
if(flag==0)
        b1.setEnabled(false);
        DefaultTableModel model = (DefaultTableModel)
table.getModel(); int rows=model.getRowCount();
 if (rows>0)
 {
 for (int i=0; i<rows; i++)
model.removeRow(0); // To remove all rows from

 }        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void b1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b1ActionPerformed

DefaultTableModel model = (DefaultTableModel)
table2.getModel();
 try
 {
Class.forName("java.sql.DriverManager");
 Connection con = (Connection)
 DriverManager.getConnection
("jdbc:mysql://localhost:3306/cms1",
"root", "A7@qcnsar");
 Statement stmt = (Statement) con.createStatement();
 String query="SELECT * FROM section";
ResultSet rs = stmt.executeQuery(query);

 while(rs.next())
 {
    
String cid = rs.getString("cid");
  String sid=rs.getString("sid");
  Statement substmt = (Statement) con.createStatement();
 String subquery="SELECT * FROM course where cid ='"+cid+"'";
 ResultSet subrs = substmt.executeQuery(subquery);
 subrs.next();
 String cname=subrs.getString("cname");
  int credits=subrs.getInt("credits");
  int ic=subrs.getInt("ic");
  TableModel m=table.getModel();
//model.addRow (new Object[] {cid,sid,cname});

  int temp = m.getRowCount();
  //JOptionPane.showMessageDialog (this,""+temp);
  int flag=0;
  for(int i=0;i<temp;i++){
   String j=(String) m.getValueAt(i, 0);
   String k=(String) m.getValueAt(i,1);

        if(j.equals(cid)&&k.equals(sid)){
            flag=1;break;
        }
        
  }
  if(flag==1)
    continue;
    else
        model.addRow (new Object[] {cid,sid,cname});
       //String cname=subrs.getString("cname");
       
 }
    
 }
 catch (Exception e)
 {
 JOptionPane.showMessageDialog (this, e.getMessage());
 }
        // TODO add your handling code here:
    }//GEN-LAST:event_b1ActionPerformed

    private void table2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table2MouseClicked
  
        int i=table2.getSelectedRow();
        TableModel m=table2.getModel();
        String j=(String) m.getValueAt(i, 0);
        String k=(String)m.getValueAt(i, 1);
        try
 {
Class.forName("java.sql.DriverManager");
 Connection con = (Connection)
 DriverManager.getConnection
("jdbc:mysql://localhost:3306/cms1",
"root", "A7@qcnsar");
 Statement stmt = (Statement) con.createStatement();
 String query="SELECT * FROM course where cid ='"+j+"'";
ResultSet rs = stmt.executeQuery(query);
rs.next();

       
       String cname=rs.getString("cname");
       int credits=rs.getInt("credits");
       int ic=rs.getInt("ic");
       query="Select * from instructor where iid='"+ic+"'";
        rs = stmt.executeQuery(query);
        rs.next();
        String insi=rs.getString("name");
        
        //model.addRow (new Object[] {cid,cname});
  String query2="select * from section,instructor,course where iid=id and section.cid=course.cid and sid='"+k+"' and section.cid='"+j+"'";      
  rs = stmt.executeQuery(query2);
  rs.next();
  String ins=rs.getString("Name");
  String option;
option = JOptionPane.showInputDialog(
"Enroll for \n CourseID: "+j+" \nCourseName: "+cname+" \nCredits: "+credits+"\nInstructor Incharge of this course : "+insi+"\n Instructor for this section is : "+ins+"\n(Y/N) ");
if(option.equals("Y")){
    

            try{
            Statement substmt = (Statement) con.createStatement();
              String subquery = "insert into studentcourse values("+stdid+",'"+j+"','"+k+ "');";
             //ResultSet subrs = substmt.executeQuery(subquery);
             substmt.executeUpdate(subquery);

            } 
             catch (Exception e)
       {
     JOptionPane.showMessageDialog (this, e.getMessage());
       }
            JOptionPane.showMessageDialog (this, "Successfully Enrolled!!");
}else if(option.equals("N")){
            JOptionPane.showMessageDialog (this, "Not Enrolled");

}
else
  JOptionPane.showMessageDialog (this, "Please enter 'Y' for Yes and 'N' for No");


 }
       
        
 catch (Exception e)
 {
 JOptionPane.showMessageDialog (this, e.getMessage());
 }
       
        
        
       // JOptionPane.showMessageDialog(null, "youd  have selected room number "+j+" in "+h);
       // System.out.println("number of rooms exceeded");
       

        // TODO add your handling code here:
    }//GEN-LAST:event_table2MouseClicked

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
 DefaultTableModel model = (DefaultTableModel)
table2.getModel(); int rows=model.getRowCount();
 if (rows>0)
 {
 for (int i=0; i<rows; i++)
model.removeRow(0); // To remove all rows from

 }         // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
homePageS obj1=new homePageS(category,sname,stdid);
obj1.setVisible(true);
this.dispose();

        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        new landingPage().setVisible(true);
    }//GEN-LAST:event_jButton6ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(homePageS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(homePageS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(homePageS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(homePageS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new homePageS(null,null,null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton b1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel l1;
    private javax.swing.JLabel l2;
    private javax.swing.JLabel ll;
    private javax.swing.JTable table;
    private javax.swing.JTable table2;
    // End of variables declaration//GEN-END:variables
}
